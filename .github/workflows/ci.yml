name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build:prod

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/
          retention-days: 1

  validate-hacs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build for HACS validation
        run: npm run build:prod

      - name: Verify required files exist
        run: |
          echo "Checking for HACS required files..."
          ls -la
          ls -la dist/ || echo "No dist directory found"

          if [ ! -f "hacs.json" ]; then
            echo "ERROR: hacs.json not found"
            exit 1
          fi

          if [ ! -f "dist/ha-webrtc-sip-card.js" ]; then
            echo "ERROR: dist/ha-webrtc-sip-card.js not found"
            exit 1
          fi

          echo "All required HACS files present"

      - name: HACS Validation
        uses: hacs/action@main
        with:
          category: plugin
          comment: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

  validate-structure:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Validate file structure
        run: |
          echo "Checking required files..."
          ls -la dist/

          if [ ! -f "dist/ha-webrtc-sip-card.js" ]; then
            echo "Error: ha-webrtc-sip-card.js not found in dist/"
            exit 1
          fi

          if [ ! -f "dist/ha-webrtc-sip-card-editor.js" ]; then
            echo "Error: ha-webrtc-sip-card-editor.js not found in dist/"
            exit 1
          fi

          if [ ! -f "hacs.json" ]; then
            echo "Error: hacs.json not found"
            exit 1
          fi

          echo "All required files present ✓"

          # Check file sizes
          JS_SIZE=$(stat -c%s "dist/ha-webrtc-sip-card.js")
          EDITOR_SIZE=$(stat -c%s "dist/ha-webrtc-sip-card-editor.js")

          if [ "$JS_SIZE" -lt 1000 ]; then
            echo "Warning: Main JS file seems too small ($JS_SIZE bytes)"
            exit 1
          fi

          if [ "$EDITOR_SIZE" -lt 500 ]; then
            echo "Warning: Editor JS file seems too small ($EDITOR_SIZE bytes)"
            exit 1
          fi

          echo "File sizes look good ✓"

  release-check:
    runs-on: ubuntu-latest
    needs: [test, build, validate-hacs, validate-structure]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Check if release needed
        id: release-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if git tag --list | grep -q "^v${CURRENT_VERSION}$"; then
            echo "Version v${CURRENT_VERSION} already tagged"
            echo "needs_release=false" >> $GITHUB_OUTPUT
          else
            echo "Version v${CURRENT_VERSION} not tagged, release needed"
            echo "needs_release=true" >> $GITHUB_OUTPUT
            echo "version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: steps.release-check.outputs.needs_release == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.release-check.outputs.version }}
          name: Release v${{ steps.release-check.outputs.version }}
          body: |
            ## Changes

            Auto-generated release for version ${{ steps.release-check.outputs.version }}

            ### Files
            - ha-webrtc-sip-card.js - Main card component
            - ha-webrtc-sip-card-editor.js - Configuration editor
            - hacs.json - HACS metadata

            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false
          files: |
            dist/ha-webrtc-sip-card.js
            dist/ha-webrtc-sip-card-editor.js
            hacs.json
